name: Python package

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Lint with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose --line-length 120"
          src: "./poetex"
          version: "~= 22.0"

      - name: Test with unittest
        run: |
          source .venv/bin/activate
          python -m unittest discover

  build_pdf:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Compile LaTeX example
      uses: xu-cheng/latex-action@v3
      with:
        root_file: main.tex
        working_directory: example

    - name: Upload PDF example
      uses: actions/upload-artifact@v4
      with:
        name: PDF
        path: example/main.pdf
